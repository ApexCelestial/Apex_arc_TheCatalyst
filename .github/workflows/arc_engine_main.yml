name: Apex Arc Engine Daily Run

on:
  schedule:
    - cron: '0 14 * * *'  # Runs daily at 14:00 UTC (9 AM EST)
  workflow_dispatch:      # Allows manual trigger from GitHub UI

jobs:
  run-daily-engine:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Apex Arc Engine
      run: |
        python main.py

    - name: Archive Output Files
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: apex-arc-output
        path: output/
from pathlib import Path

# Create the GitHub Actions workflow file content
workflow_content = """
name: Apex Arc Engine Daily Run

on:
  schedule:
    - cron: '0 14 * * *'  # Runs daily at 14:00 UTC (9 AM EST)
  workflow_dispatch:      # Allows manual trigger from GitHub UI

jobs:
  run-daily-engine:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Apex Arc Engine
      run: |
        python main.py

    - name: Archive Output Files
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: apex-arc-output
        path: output/
"""

# Define the file path
workflow_file_path = Path("/mnt/data/arc_engine_main.yml")

# Write the workflow content to a file
workflow_file_path.write_text(workflow_content.strip())

# Return the path to the generated file
workflow_file_path